@model StudentManagement.Data.Identity

@{
    ViewData["Title"] = "Add Students";
    Layout = "~/Views/Shared/_PrincipalLayout.cshtml";
    var successMessage = TempData["SuccessMessage"] as string;
}

<div class="container">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card bg-dark text-light">
                <div class="text-begin card-header">
                    <h2 class="display-7 text-light">Add Students</h2>
                </div>
                <div class="card-body p-3" style="max-height: 400px; overflow-y: auto;">
                    @using (Html.BeginForm("AddStudent", "Staff", FormMethod.Post))
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name)
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required", pattern = "[A-Za-z ]+", placeholder = "Enter name" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Class)
                            @Html.TextBoxFor(model => model.Class, new { @class = "form-control", required = "required", placeholder = "Enter students / staffs class 6 - 10 " })
                            @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.DateofBirth)
                            @Html.TextBoxFor(model => model.DateofBirth, "{0:dd/MM/yyyy}", new { @class = "form-control", required = "required", pattern = "\\d{2}/\\d{2}/\\d{4}", placeholder = "Enter date of birth (dd/mm/yyyy)" })
                            @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email)
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", required = "required", type = "email", placeholder = "Enter email" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ContactNumber)
                            @Html.TextBoxFor(model => model.ContactNumber, new { @class = "form-control", required = "required", pattern = "[0-9]+", placeholder = "Enter contactNumber" })
                            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Designation)
                            @Html.TextBoxFor(model => model.Designation, new { @class = "form-control", required = "required", placeholder = "Enter Student / Teacher" })
                            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Area)
                            @Html.TextBoxFor(model => model.Area, new { @class = "form-control", required = "required", placeholder = "Enter area" })
                            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BloodGroup)
                            @Html.TextBoxFor(model => model.BloodGroup, new { @class = "form-control", required = "required", placeholder = "Enter bloodgroup" })
                            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Password)
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", required = "required", minlength = "6", placeholder = "Enter password" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="btn-container text-center p-3">
                            <input type="submit" value="Add" class="btn btn-warning">
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        alert('@successMessage');
    </script>
}